pipeline {
    agent any
    stages{
        stage("Verifying tooling"){
            steps{
                sh '''
                    whoami
                    docker version
                    docker info
                    docker-compose version
                    curl --version
                    jq --version

                '''
            }
        }
        stage("Stopping containers and Removing Containers,Volumes,Images"){
            steps{
                sh '''
                    docker stop $(docker ps -a -q)
                    docker rm $(docker ps -a -q)
                    docker rmi $(docker images -a -q)
                    docker volume rm $(docker volume ls -q)
                    docker system prune -a
                '''
            }
        }
        
        stage('Start container'){
            steps{
                
                script{
                   withEnv(["ALLOWED_HOSTS = ${env.ALLOWED_HOSTS}","DATABASE_URL = ${env.DATABASE_URL}","DEBUG = ${env.DEBUG}","SECRET_KEY = ${env.SECRET_KEY}","AWS_SES_FROM_EMAIL = ${env.AWS_SES_FROM_EMAIL}","AWS_SES_ACCESS_KEY_ID = ${env.AWS_SES_ACCESS_KEY_ID}","AWS_SES_SECRET_ACCESS_KEY = ${env.AWS_SES_SECRET_ACCESS_KEY}","DOMAIN = ${env.DOMAIN}","CORS_ALLOWED_ORIGINS = ${env.CORS_ALLOWED_ORIGINS}","AUTH_COOKIE_SECURE = ${env.AUTH_COOKIE_SECURE}","REDIRECT_URLS = ${env.REDIRECT_URLS}","GOOGLE_AUTH_KEY = ${env.GOOGLE_AUTH_KEY}","GOOGLE_AUTH_SECRET_KEY = ${env.GOOGLE_AUTH_SECRET_KEY}"]){

                    echo '[ALLOWED_HOSTS = ${env.ALLOWED_HOSTS},DATABASE_URL = ${env.DATABASE_URL},DEBUG = ${env.DEBUG},SECRET_KEY = ${env.SECRET_KEY}]'
                    
                    sh 'docker-compose -f docker-compose.prod.yml up -d --build'
                    sh 'docker-compose -f docker-compose.prod.yml ps'
                    

                   } 
                }
                //sh 'docker-compose -f docker-compose.prod.yml up -d --build'
                //sh 'docker-compose -f docker-compose.prod.yml ps'
            }
        }
        stage('Running tests against the container'){
            steps{
                sh 'curl http://localhost:1337'
            }
        }

    }
    //post {
    //    always {
    //        sh 'docker-compose down --remove-orphans -v'
    //        sh 'docker-compose ps'
    //    }
    //}
}
