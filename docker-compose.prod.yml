version: '3.9'

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: apps/docker/web/Dockerfile.prod
    volumes:
      - static:/app/web/static

    ports:
      - 8000:8000
    environment:
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - AWS_SES_FROM_EMAIL=${AWS_SES_FROM_EMAIL}
      - AWS_SES_ACCESS_KEY_ID=${AWS_SES_ACCESS_KEY_ID}
      - AWS_SES_SECRET_ACCESS_KEY=${AWS_SES_SECRET_ACCESS_KEY}
      - DOMAIN=${DOMAIN}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - AUTH_COOKIE_SECURE=${AUTH_COOKIE_SECURE}
      - REDIRECT_URLS=${REDIRECT_URLS}
      - GOOGLE_AUTH_KEY=${GOOGLE_AUTH_KEY}
      - GOOGLE_AUTH_SECRET_KEY=${GOOGLE_AUTH_SECRET_KEY}
      - HOSTNAME = ${HOSTNAME}"
      - PORTs=${PORTs}
      - NEXT_PUBLIC_HOST=${NEXT_PUBLIC_HOST}

  www:
    container_name: www
    build:
      context: .
      dockerfile: apps/docker/www/Dockerfile
    volumes:
      - node_modules:/app/www/node_modules
    environment:
      - HOSTNAME=${HOSTNAME}
      - PORT=${PORT}
      - NEXT_PUBLIC_HOST=${NEXT_PUBLIC_HOST}
    ports:
      - 3000:3000

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: apps/docker/nginx/Dockerfile
    volumes:
      - static:/app/web/static
    ports:
      - 1337:80


volumes:
  static:
  node_modules: