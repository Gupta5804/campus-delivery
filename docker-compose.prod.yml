version: '3.8'

services:
  web:
    container_name: campusdelivery
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles

    #ports:
    #  - 80:8000
    expose:
      - 8000
    
    environment:
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
  #  env_file:
  #    - ./.env.prod
  #  depends_on:
  #    - db
  # db:
  #   image: postgres:15
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   env_file:
  #     - ./.env.prod.db
  nginx:
    restart: always
    build: 
      context: ./nginx
      dockerfile: Dockerfile.prod
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
  acme-companion:
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=${DEFAULT_EMAIL}
      - ACME_CA_URI=${ACME_CA_URI}
      - NGINX_PROXY_CONTAINER=${NGINX_PROXY_CONTAINER}
    #env_file:
    #  - ./.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx
  #certbot:
  #  image: certbot/certbot
  #  container_name: certbot
  #  volumes:
  #    - ./data/certbot/conf:/etc/letsencrypt
  #    - ./data/certbot/www:/var/www/certbot

volumes:
  #postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
