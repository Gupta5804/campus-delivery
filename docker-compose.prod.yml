version: '3.8'

services:
  web:
    container_name: campusdelivery
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: sh -c "python manage.py makemigrations &&
                   python manage.py migrate &&
                   python manage.py collectstatic --no-input &&
                   gunicorn main.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles

    expose:
      - 8000    
    
    environment:
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}

  #  env_file:
  #    - ./.env.prod
  #  depends_on:
  #    - db
  # db:
  #   image: postgres:15
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   env_file:
  #     - ./.env.prod.db
  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80

    depends_on:
      - web
  frontend:
    container_name: frontend
    image: frontend:custom
    build: ./frontend
    expose:
      - 3000
    command: serve -s /usr/app/build -l 3000
    depends_on:
      - web

volumes:
  #postgres_data:
  static_volume:
  media_volume:
